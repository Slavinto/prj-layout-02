@forward "fonts";
@forward "colors";
@forward "mixins";
@forward "maps";
@forward "placeholders";

@use "fonts" as f;
@use "colors" as c;
@use "mixins" as m;
@use "maps";

/*===========================================*/
// Variables
/*===========================================*/
$bps: maps.$breakpoints;
$min-width: 320px;
$wrapper: 2000;
$main-content-container: 1144;

/*===========================================*/
//  Imports
/*===========================================*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

*:focus {
    outline: none;
    box-shadow: 0 0 0 0.7rem rgba(134, 149, 164, 0.5);
}

html {
    /* decreases default root element font size to 10px from 16px */
    // font-size: 62.5%;

    font-size: calc(10 / 16) * 100% !important;

    @media (max-width: map_get($bps, "desktop")) {
        font-size: calc(10 / 16) * 100% !important;
    }
    @media (max-width: map_get($bps, "tablet-wide")) {
        font-size: calc(8.5 / 16) * 100% !important;
    }
    @media (max-width: map_get($bps, "tablet")) {
        font-size: calc(7.5 / 16) * 100% !important;
    }
    @media (max-width: map_get($bps, "phone-wide")) {
        font-size: calc(6.5 / 16) * 100% !important;
    }
    @media (max-width: map_get($bps, "phone")) {
        font-size: calc(6 / 16) * 100% !important;
    }
}

// Default font-family
$fontFamily: "Montserrat";

body {
    ul {
        list-style-type: none;
    }
    a {
        text-decoration: none;
    }
    font-family: $fontFamily, sans-serif;
    line-height: 1;
    font-size: 1.2rem;
    font-weight: 400;
    color: c.$dark;
}

/*===========================================*/

/*===========================================*/
// Text styles
._text {
    font-size: 1.6rem;
    line-height: 2.4rem;
}

.text-common {
    &__light {
        font-family: Montserrat;
        font-size: 1.6rem;
        font-style: normal;
        font-weight: 300;
        line-height: 2.9rem;

        color: #fff;
    }

    &__dark {
        font-family: Montserrat;
        font-size: 1.6rem;
        font-style: normal;
        font-weight: 300;
        line-height: 2.9rem;
        color: c.$dark;
    }
}

/*===========================================*/
// Default styling classes

._centered {
    margin: 0 auto;
}

._dark {
    color: c.$dark !important;
}

._mobile-link {
    display: none;
    @include m.mq(tablet, max) {
        display: inline-block;
    }
}

.wrapper {
    display: flex;
    align-items: center;
    position: relative;
    min-height: 100%;
    overflow: hidden;
    flex-direction: column;

    &::before {
        content: "";
        position: absolute;
        top: 0;
        z-index: -1;
        width: 144rem;
        height: 68.3rem;
        @include m.background("../img/header-bg.svg");
    }

    &::after {
        content: "";
        position: absolute;
        bottom: 0;
        z-index: -1;
        width: 144rem;
        height: 47.1rem;
        background-color: #2d3e74;
        @include m.background("../img/footer-bg.svg");
        background-size: 64.8rem;
        background-position: bottom right 8rem;
    }
}

main {
    flex: 1 1 auto;
}

// adaptive image
._adaptive {
    width: 100%;
    height: 100%;
    object-position: 0 0;
    object-fit: cover;
}

// Main adaptive container
._container {
    /*===========================================*/
    // Container current
    /*===========================================*/
    padding: 0 2rem;
    $w: $main-content-container + px;

    // @media (width > map_get($bps, "desktop-wide")){
    //     // 1440px
    //     max-width: map_get($bps, "desktop-wide");
    // }

    // @include m.mq(desktop-wide, max) {
    //     //1248px
    //     max-width: map_get($bps, "desktop");
    // }

    /*===this=media=query=must=always=be=ontop===*/
    @media (width > $w) {
        // 1144px
        max-width: $w;
    }
    /*===========================================*/

    @include m.mq(desktop, max) {
        //1024px
        max-width: map_get($bps, "tablet-wide");
    }

    @include m.mq(tablet-wide, max) {
        //768px
        max-width: map_get($bps, "tablet");
    }

    @include m.mq(tablet, max) {
        //640px
        max-width: map_get($bps, "tablet-small");
    }

    @include m.mq(tablet-small, max) {
        //560px
        max-width: map_get($bps, "phablet");
    }

    @include m.mq(phablet, max) {
        //480px
        max-width: map_get($bps, "phone-wide");
    }
    @include m.mq(phone-wide, max) {
        //400px
        max-width: map_get($bps, "phone");
    }
    @media (width <= 380px) {
        // padding: 0;
        // margin: 0;
    }
    /*===========================================*/
}
